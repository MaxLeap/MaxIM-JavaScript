{"version":3,"sources":["../src/service/session.ts"],"names":[],"mappings":"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","file":"session.js","sourcesContent":["import {\n    Media,\n    MessageTo,\n    PushSettings,\n    Receiver,\n    MessageFrom,\n    YourselfMessageFrom,\n    SystemMessageFrom,\n    BasicMessageFrom\n} from \"../model/messages\";\nimport {Context, ContextImpl} from \"./context\";\nimport {APIOptions, Handler2, Handler3, Handler1, Callback, Callback2, LoginResult} from \"../model/models\";\nimport {convert2basic} from \"../helper/utils\";\nimport io = require('socket.io-client');\nimport Socket = SocketIOClient.Socket;\n\ninterface MessageBuilder {\n    asText(): MessageBuilder;\n    asImage(): MessageBuilder;\n    asAudio(): MessageBuilder;\n    asVideo(): MessageBuilder;\n\n    disablePush(): MessageBuilder;\n    setPushSound(sound: string): MessageBuilder;\n    setPushBadge(badge: number): MessageBuilder;\n    setPushContentAvailable(contentAvailable: boolean): MessageBuilder;\n    setPushPrefix(prefix: string): MessageBuilder;\n    setPushSuffix(suffix: string): MessageBuilder;\n    setPushTextOverwrite(text: string): MessageBuilder;\n\n    toFriend(friend: string): MessageLauncher;\n    toGroup(groupid: string): MessageLauncher;\n    toRoom(roomid: string): MessageLauncher;\n    toPassenger(passengerid: string): MessageLauncher;\n    toStranger(strangerid: string): MessageLauncher;\n}\n\ninterface MessageLauncher {\n    ok(callback?: Callback<void>): Session;\n}\n\nclass MessageBuilderImpl implements MessageBuilder {\n\n    message: MessageTo;\n    session: SessionImpl;\n\n    constructor(session: SessionImpl, text: string, remark?: string) {\n        this.session = session;\n        this.message = {\n            to: {\n                id: null\n            },\n            content: {\n                media: Media.TEXT,\n                body: text\n            }\n        };\n        if (remark != null) {\n            this.message.remark = remark;\n        }\n    }\n\n    asText(): MessageBuilder {\n        this.message.content.media = Media.TEXT;\n        return this;\n    }\n\n    asImage(): MessageBuilder {\n        this.message.content.media = Media.IMAGE;\n        return this;\n    }\n\n    asAudio(): MessageBuilder {\n        this.message.content.media = Media.AUDIO;\n        return this;\n    }\n\n    asVideo(): MessageBuilder {\n        this.message.content.media = Media.VIDEO;\n        return this;\n    }\n\n    private createPushIfNotExist(): PushSettings {\n        if (!this.message.push) {\n            this.message.push = {};\n        }\n        return this.message.push;\n    }\n\n    disablePush(): MessageBuilder {\n        this.createPushIfNotExist().enable = false;\n        return this;\n    }\n\n    setPushSound(sound: string): MessageBuilder {\n        this.createPushIfNotExist().sound = sound;\n        return this;\n    }\n\n    setPushBadge(badge: number): MessageBuilder {\n        this.createPushIfNotExist().badge = badge;\n        return this;\n    }\n\n    setPushContentAvailable(contentAvailable: boolean): MessageBuilder {\n        this.createPushIfNotExist().contentAvailable = contentAvailable;\n        return this;\n    }\n\n    setPushPrefix(prefix: string): MessageBuilder {\n        this.createPushIfNotExist().prefix = prefix;\n        return this;\n    }\n\n    setPushSuffix(suffix: string): MessageBuilder {\n        this.createPushIfNotExist().suffix = suffix;\n        return this;\n    }\n\n    setPushTextOverwrite(text: string): MessageBuilder {\n        this.createPushIfNotExist().overwrite = text;\n        return this;\n    }\n\n    toFriend(friend: string): MessageLauncher {\n        this.message.to.id = friend;\n        this.message.to.type = Receiver.ACTOR;\n        return new MessageLauncherImpl(this.session, this.message);\n    }\n\n    toGroup(groupid: string): MessageLauncher {\n        this.message.to.id = groupid;\n        this.message.to.type = Receiver.GROUP;\n        return new MessageLauncherImpl(this.session, this.message);\n    }\n\n    toRoom(roomid: string): MessageLauncher {\n        this.message.to.id = roomid;\n        this.message.to.type = Receiver.ROOM;\n        return new MessageLauncherImpl(this.session, this.message);\n    }\n\n    toPassenger(passengerid: string): MessageLauncher {\n        this.message.to.id = passengerid;\n        this.message.to.type = Receiver.PASSENGER;\n        return new MessageLauncherImpl(this.session, this.message);\n    }\n\n    toStranger(strangerid: string): MessageLauncher {\n        this.message.to.id = strangerid;\n        this.message.to.type = Receiver.STRANGER;\n        return new MessageLauncherImpl(this.session, this.message);\n    }\n\n}\n\nclass MessageLauncherImpl implements MessageLauncher {\n\n    session: SessionImpl;\n    message: MessageTo;\n\n    constructor(session: SessionImpl, message: MessageTo) {\n        this.session = session;\n        this.message = message;\n    }\n\n    ok(callback?: Callback<void>): Session {\n        try {\n            this.session.socket.emit('say', this.message);\n            if (callback) {\n                callback(null, null);\n            }\n        } catch (e) {\n            if (callback) {\n                callback(e);\n            }\n        }\n        return this.session;\n    }\n}\n\nexport class SessionBuilderImpl implements SessionBuilder {\n\n    private friends: Handler2<string,BasicMessageFrom>[];\n    private groups: Handler3<string,string,BasicMessageFrom>[];\n    private rooms: Handler3<string,string,BasicMessageFrom>[];\n    private passengers: Handler2<string,BasicMessageFrom>[];\n    private strangers: Handler2<string,BasicMessageFrom>[];\n    private friendonlines: Handler1<string>[];\n    private friendofflines: Handler1<string>[];\n    private strangeronlineds: Handler1<string>[];\n    private strangerofflines: Handler1<string>[];\n    private systems: Handler1<SystemMessageFrom>[];\n    private yourselfs: Handler1<YourselfMessageFrom>[];\n\n    private apiOptions: APIOptions;\n    private authdata: {};\n\n    constructor(apiOptions: APIOptions, authdata: {}) {\n        this.apiOptions = apiOptions;\n        this.authdata = authdata;\n\n        this.friends = [];\n        this.groups = [];\n        this.rooms = [];\n        this.passengers = [];\n        this.strangers = [];\n\n        this.friendonlines = [];\n        this.friendofflines = [];\n        this.strangeronlineds = [];\n        this.strangerofflines = [];\n        this.systems = [];\n        this.yourselfs = [];\n    }\n\n    setNotifyAll(enable: boolean): SessionBuilder {\n        this.authdata['notifyAll'] = enable;\n        return this;\n    }\n\n    setInstallation(installation: string): SessionBuilder {\n        this.authdata['install'] = installation;\n        return this;\n    }\n\n    onFriendMessage(handler: Handler2<string,BasicMessageFrom>): SessionBuilder {\n        this.friends.push(handler);\n        return this;\n    }\n\n    onGroupMessage(handler: Handler3<string,string,MessageFrom>): SessionBuilder {\n        this.groups.push(handler);\n        return this;\n    }\n\n    onRoomMessage(handler: Handler3<string,string,MessageFrom>): SessionBuilder {\n        this.rooms.push(handler);\n        return this;\n    }\n\n    onPassengerMessage(handler: Handler2<string,MessageFrom>): SessionBuilder {\n        this.passengers.push(handler);\n        return this;\n    }\n\n    onStrangerMessage(handler: Handler2<string,MessageFrom>): SessionBuilder {\n        this.strangers.push(handler);\n        return this;\n    }\n\n    onFriendOnline(handler: Handler1<string>): SessionBuilder {\n        this.friendonlines.push(handler);\n        return this;\n    }\n\n    onFriendOffline(handler: Handler1<string>): SessionBuilder {\n        this.friendofflines.push(handler);\n        return this;\n    }\n\n    onStrangerOnline(handler: Handler1<string>): SessionBuilder {\n        this.strangeronlineds.push(handler);\n        return this;\n    }\n\n    onStrangerOffline(handler: Handler1<string>): SessionBuilder {\n        this.strangerofflines.push(handler);\n        return this;\n    }\n\n    onSystemMessage(handler: Handler1<SystemMessageFrom>): SessionBuilder {\n        this.systems.push(handler);\n        return this;\n    }\n\n    onYourself(handler: Handler1<YourselfMessageFrom>): SessionBuilder {\n        this.yourselfs.push(handler);\n        return this;\n    }\n\n\n    ok(callback: Callback2<Session,Context>) {\n        let url = `${this.apiOptions.server}/chat`;\n        let socket = io.connect(url, {\n            query: `auth=${JSON.stringify(this.authdata)}`,\n            transports: ['websocket']\n        });\n        socket.once('login', result => {\n            let foo = result as LoginResult;\n            if (foo.success) {\n                let session = new SessionImpl(socket, foo.id);\n                let ctx = new ContextImpl(this.apiOptions, result.id);\n                callback(null, session, ctx);\n            } else {\n                callback(new Error(`error: ${foo.error}`), null, null);\n            }\n        });\n\n        socket.on('message', income => {\n            let msg = income as MessageFrom;\n            let basicmsg = convert2basic(msg);\n            switch (msg.from.type) {\n                case Receiver.ACTOR:\n                    for (let handler of this.friends) {\n                        handler(msg.from.id, basicmsg);\n                    }\n                    break;\n                case Receiver.GROUP:\n                    for (let handler of this.groups) {\n                        handler(msg.from.gid, msg.from.id, basicmsg);\n                    }\n                    break;\n                case Receiver.ROOM:\n                    for (let handler of this.rooms) {\n                        handler(msg.from.gid, msg.from.id, basicmsg);\n                    }\n                    break;\n                case Receiver.PASSENGER:\n                    for (let handler of this.passengers) {\n                        handler(msg.from.id, basicmsg);\n                    }\n                    break;\n                case Receiver.STRANGER:\n                    for (let handler of this.strangers) {\n                        handler(msg.from.id, basicmsg);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        socket.on('online', onlineid => {\n            for (let handler of this.friendonlines) {\n                handler(onlineid as string);\n            }\n        });\n\n        socket.on('offline', offlineid=> {\n            for (let handler of this.friendofflines) {\n                handler(offlineid as string);\n            }\n        });\n\n        socket.on('online_x', onlineid => {\n            for (let handler of this.strangeronlineds) {\n                handler(onlineid as string);\n            }\n        });\n\n        socket.on('offline_x', offlineid => {\n            for (let handler of this.strangerofflines) {\n                handler(offlineid as string);\n            }\n        });\n\n        socket.on('sys', income => {\n            let msg = income as BasicMessageFrom;\n            for (let handler of this.systems) {\n                handler(msg);\n            }\n        });\n\n        socket.on('yourself', income => {\n            let msg = income as YourselfMessageFrom;\n            for (let handler of this.yourselfs) {\n                handler(msg);\n            }\n        });\n    }\n}\n\nclass SessionImpl implements Session {\n    private closed: boolean;\n    private userid: string;\n\n    socket: Socket;\n\n    constructor(socket: Socket, userid: string) {\n        this.closed = false;\n        this.socket = socket;\n        this.userid = userid;\n    }\n\n    current(): string {\n        return this.userid;\n    }\n\n    say(text: string, remark?: string): MessageBuilder {\n        if (this.closed) {\n            throw new Error('session is closed.');\n        }\n        return new MessageBuilderImpl(this, text, remark);\n    }\n\n    close(callback?: Callback<void>): void {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        this.socket.close();\n    }\n\n}\n\nexport interface Session {\n    current(): string;\n    say(text: string, remark?: string): MessageBuilder;\n    close(callback?: Callback<void>): void;\n}\n\nexport interface SessionBuilder {\n    setNotifyAll(enable: boolean): SessionBuilder;\n    setInstallation(installation: string): SessionBuilder;\n\n    onFriendMessage(handler: Handler2<string,BasicMessageFrom>): SessionBuilder;\n    onGroupMessage(handler: Handler3<string, string,BasicMessageFrom>): SessionBuilder;\n    onRoomMessage(handler: Handler3<string,string,BasicMessageFrom>): SessionBuilder;\n    onPassengerMessage(handler: Handler2<string,BasicMessageFrom>): SessionBuilder;\n    onStrangerMessage(handler: Handler2<string,BasicMessageFrom>): SessionBuilder;\n    onFriendOnline(handler: Handler1<string>): SessionBuilder;\n    onFriendOffline(handler: Handler1<string>): SessionBuilder;\n    onStrangerOnline(handler: Handler1<string>): SessionBuilder;\n    onStrangerOffline(handler: Handler1<string>): SessionBuilder;\n    onSystemMessage(handler: Handler1<SystemMessageFrom>): SessionBuilder;\n    onYourself(handler: Handler1<YourselfMessageFrom>): SessionBuilder;\n\n    ok(callback: Callback2<Session,Context>);\n}\n"]}