{"version":3,"sources":["../src/service/passenger.ts"],"names":[],"mappings":"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","file":"passenger.js","sourcesContent":["import {Callback2, Attributes, APIOptions, Handler2, Handler1, LoginResult, Callback} from \"../model/models\";\nimport {BasicMessageFrom, MessageTo, Media, MessageFrom, Receiver, PushSettings} from \"../model/messages\";\nimport {md5} from \"../helper/md5\";\nimport {CommonService, CommonServiceImpl} from \"./common\";\nimport {ParrotError, convert2basic} from \"../helper/utils\";\nimport io = require('socket.io-client');\nimport Socket = SocketIOClient.Socket;\n\n\ninterface PassengerBuilder {\n    attribute(name: string, value: any): PassengerBuilder;\n    onUserMessage(callback: Handler2<string,BasicMessageFrom>): PassengerBuilder;\n    onSystemMessage(callback: Handler1<BasicMessageFrom>): PassengerBuilder;\n    onStrangerOnline(callback: Handler1<string>): PassengerBuilder;\n    onStrangerOffline(callback: Handler1<string>): PassengerBuilder;\n    ok(callback: Callback2<PassengerSession,PassengerContext>);\n}\n\ninterface PassengerSession {\n    say(text: string, remark?: string): MessageBuilder;\n    close(callback?: Callback<void>);\n}\n\n\ninterface MessageBuilder {\n\n    asText(): MessageBuilder;\n    asImage(): MessageBuilder;\n    asAudio(): MessageBuilder;\n    asVideo(): MessageBuilder;\n\n    disablePush(): MessageBuilder;\n    setPushSound(sound: string): MessageBuilder;\n    setPushBadge(badge: number): MessageBuilder;\n    setPushContentAvailable(contentAvailable: boolean): MessageBuilder;\n    setPushPrefix(prefix: string): MessageBuilder;\n    setPushSuffix(suffix: string): MessageBuilder;\n    setPushTextOverwrite(text: string): MessageBuilder;\n\n    toUser(userid: string): MessageLauncher;\n}\n\ninterface MessageLauncher {\n    ok(callback?: Callback<void>): PassengerSession;\n}\n\ninterface PassengerContext extends CommonService {\n\n    current(): string;\n\n}\n\nclass MessageBuilderImpl implements MessageBuilder {\n\n    message: MessageTo;\n    session: PassengerSessionImpl;\n\n    constructor(session: PassengerSessionImpl, text: string, remark?: string) {\n        this.session = session;\n        this.message = {\n            to: {\n                id: null\n            },\n            content: {\n                media: Media.TEXT,\n                body: text\n            }\n        };\n        if (remark != null) {\n            this.message.remark = remark;\n        }\n    }\n\n    private createPushIfNotExist(): PushSettings {\n        if (!this.message.push) {\n            this.message.push = {};\n        }\n        return this.message.push;\n    }\n\n    disablePush(): MessageBuilder {\n        this.createPushIfNotExist().enable = false;\n        return this;\n    }\n\n    setPushSound(sound: string): MessageBuilder {\n        this.createPushIfNotExist().sound = sound;\n        return this;\n    }\n\n    setPushBadge(badge: number): MessageBuilder {\n        this.createPushIfNotExist().badge = badge;\n        return this;\n    }\n\n    setPushContentAvailable(contentAvailable: boolean): MessageBuilder {\n        this.createPushIfNotExist().contentAvailable = contentAvailable;\n        return this;\n    }\n\n    setPushPrefix(prefix: string): MessageBuilder {\n        this.createPushIfNotExist().prefix = prefix;\n        return this;\n    }\n\n    setPushSuffix(suffix: string): MessageBuilder {\n        this.createPushIfNotExist().suffix = suffix;\n        return this;\n    }\n\n    setPushTextOverwrite(text: string): MessageBuilder {\n        this.createPushIfNotExist().overwrite = text;\n        return this;\n    }\n\n    asText(): MessageBuilder {\n        this.message.content.media = Media.TEXT;\n        return this;\n    }\n\n    asImage(): MessageBuilder {\n        this.message.content.media = Media.IMAGE;\n        return this;\n    }\n\n    asAudio(): MessageBuilder {\n        this.message.content.media = Media.AUDIO;\n        return this;\n    }\n\n    asVideo(): MessageBuilder {\n        this.message.content.media = Media.VIDEO;\n        return this;\n    }\n\n    toUser(userid: string): MessageLauncher {\n        this.message.to.id = userid;\n        return new MessageLauncherImpl(this.session, this.message);\n    }\n\n}\n\nclass MessageLauncherImpl implements MessageLauncher {\n\n    private _session: PassengerSessionImpl;\n    private _message: MessageTo;\n\n    constructor(session: PassengerSessionImpl, message: MessageTo) {\n        this._session = session;\n        this._message = message;\n    }\n\n    ok(callback?: Callback<void>): PassengerSession {\n        try {\n            this._session._socket.emit('say', this._message);\n            if (callback) {\n                callback(null, null);\n            }\n        } catch (e) {\n            if (callback) {\n                callback(e);\n            }\n        }\n        return this._session;\n    }\n}\n\n\nclass PassengerSessionImpl implements PassengerSession {\n\n    _socket: Socket;\n    _id: string;\n\n    private _closed: boolean;\n\n    constructor(socket: Socket, passengerid: string) {\n        this._socket = socket;\n        this._id = passengerid;\n    }\n\n    say(text: string, remark?: string): MessageBuilder {\n        return new MessageBuilderImpl(this, text, remark);\n    }\n\n    close(callback?: Callback<void>) {\n        if (this._closed) {\n            return;\n        }\n        this._closed = true;\n        this._socket.close();\n    }\n\n}\n\nclass PassengerContextImpl extends CommonServiceImpl implements PassengerContext {\n\n    private _you: string;\n\n    constructor(options: APIOptions, you: string) {\n        super(options);\n        this._you = you;\n    }\n\n    current(): string {\n        return this._you;\n    }\n\n}\n\nclass PassengerBuilderImpl implements PassengerBuilder {\n\n    private _id: string;\n    private _options: APIOptions;\n    private _attributes: Attributes = [];\n    private _fromuser: Handler2<string,BasicMessageFrom>[] = [];\n    private _fromsystem: Handler1<BasicMessageFrom>[] = [];\n    private _fromStrangerOnline: Handler1<string>[] = [];\n    private _fromStrangerOffline: Handler1<string>[] = [];\n\n    constructor(options: APIOptions, id?: string) {\n        this._options = options;\n        this._id = id;\n    }\n\n    attribute(name: string, value: any): PassengerBuilder {\n        this._attributes[name] = value;\n        return this;\n    }\n\n    onUserMessage(callback: Handler2<string, BasicMessageFrom>): PassengerBuilder {\n        this._fromuser.push(callback);\n        return this;\n    }\n\n    onSystemMessage(callback: Handler1<BasicMessageFrom>): PassengerBuilder {\n        this._fromsystem.push(callback);\n        return this;\n    }\n\n    onStrangerOnline(callback: Handler1<string>): PassengerBuilder {\n        this._fromStrangerOnline.push(callback);\n        return this;\n    }\n\n    onStrangerOffline(callback: Handler1<string>): PassengerBuilder {\n        this._fromStrangerOffline.push(callback);\n        return this;\n    }\n\n    ok(callback: Callback2<PassengerSession, PassengerContext>) {\n        let url = `${this._options.server}/chat`;\n\n        let foo = new Date().getTime();\n        let bar = md5(`${foo}${this._options.sign}`) + ',' + foo;\n        let authdata = {\n            app: this._options.app,\n            sign: bar,\n            passenger: {}\n        };\n\n        for (let k in this._attributes) {\n            if (k === 'id') {\n                continue;\n            }\n            authdata.passenger[k] = this._attributes[k];\n        }\n\n        if (this._id) {\n            authdata.passenger['id'] = this._id;\n        }\n\n        let socket = io.connect(url, {\n            query: `auth=${JSON.stringify(authdata)}`,\n            transports: ['websocket']\n        });\n        socket.once('login', result => {\n            let foo = result as LoginResult;\n            if (foo.success) {\n                let session = new PassengerSessionImpl(socket, foo.id);\n                let ctx = new PassengerContextImpl(this._options, foo.id);\n                callback(null, session, ctx);\n            } else {\n                let err = new ParrotError({errorCode: foo.error, errorMessage: ''});\n                callback(err);\n            }\n        });\n\n        socket.on('message', income=> {\n            let msg = income as MessageFrom;\n            let basicmsg = convert2basic(msg);\n\n            switch (msg.from.type) {\n                case Receiver.ACTOR:\n                    for (let handler of this._fromuser) {\n                        handler(msg.from.id, basicmsg);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        socket.on('online_x', onlineid => {\n            for (let handler of this._fromStrangerOnline) {\n                handler(onlineid as string);\n            }\n        });\n\n        socket.on('offline_x', offlineid => {\n            for (let handler of this._fromStrangerOffline) {\n                handler(offlineid as string);\n            }\n        });\n\n        socket.on('sys', income => {\n            let msg = income as BasicMessageFrom;\n            for (let handler of this._fromsystem) {\n                handler(msg);\n            }\n        });\n    }\n}\n\nexport {\n    PassengerBuilder,\n    PassengerBuilderImpl\n}"]}