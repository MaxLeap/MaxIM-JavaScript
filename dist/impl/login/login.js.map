{"version":3,"sources":["../src/impl/login/login.ts"],"names":[],"mappings":";;IASA;QAWE,mBAAY,UAAsB;YAChC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;YAC1B,IAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YACjC,IAAM,GAAG,GAAG,SAAG,CAAC,KAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;YAC1D,IAAI,CAAC,SAAS,GAAG;gBACf,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG;gBACrB,IAAI,EAAE,GAAG;aACV,CAAC;QACJ,CAAC;QAjBc,gBAAM,GAArB,UAAsB,MAAU,EAAE,MAAU;YAC1C,GAAG,CAAC,CAAC,IAAM,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,CAAC;QACH,CAAC;QAeM,0BAAM,GAAb,UAAc,MAAc;YAC1B,IAAM,QAAQ,GAAG;gBACf,MAAM,EAAE,MAAM;aACf,CAAC;YACF,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC3C,MAAM,CAAC,IAAI,iCAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACxD,CAAC;QAEM,iCAAa,GAApB,UAAqB,QAAgB,EAAE,QAAgB;YACrD,IAAM,QAAQ,GAAG;gBACf,kBAAQ;gBACR,kBAAQ;aACT,CAAC;YACF,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC3C,MAAM,CAAC,IAAI,iCAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACxD,CAAC;QAEM,2BAAO,GAAd,UAAe,KAAa,EAAE,MAAc;YAC1C,IAAM,QAAQ,GAAG;gBACf,YAAK;gBACL,QAAQ,EAAE,MAAM;aACjB,CAAC;YACF,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC3C,MAAM,CAAC,IAAI,iCAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACxD,CAAC;QACH,gBAAC;IAAD,CA9CA,AA8CC,IAAA;IAGC,iBAAS,aAHV;IAIC","file":"login.js","sourcesContent":["import {Login} from \"../../api/login\";\nimport {SessionBuilder} from \"../../api/session\";\nimport {md5} from \"../../helper/md5\";\nimport {APIOptions} from \"../../model/models\";\nimport {SessionBuilderImpl} from \"../session/buildSession\";\n\n/**\n * 登录器实现类\n */\nclass LoginImpl implements Login {\n\n  private static extend(target: {}, source: {}): void {\n    for (const k in source) {\n      target[k] = source[k];\n    }\n  }\n\n  private options: APIOptions;\n  private basicAuth: {};\n\n  constructor(apiOptions: APIOptions) {\n    this.options = apiOptions;\n    const foo = new Date().getTime();\n    const bar = md5(`${foo}${this.options.sign}`) + \",\" + foo;\n    this.basicAuth = {\n      app: this.options.app,\n      sign: bar,\n    };\n  }\n\n  public simple(userid: string): SessionBuilder {\n    const authdata = {\n      client: userid,\n    };\n    LoginImpl.extend(authdata, this.basicAuth);\n    return new SessionBuilderImpl(this.options, authdata);\n  }\n\n  public byMaxleapUser(username: string, password: string): SessionBuilder {\n    const authdata = {\n      username,\n      password,\n    };\n    LoginImpl.extend(authdata, this.basicAuth);\n    return new SessionBuilderImpl(this.options, authdata);\n  }\n\n  public byPhone(phone: string, verify: string): SessionBuilder {\n    const authdata = {\n      phone,\n      password: verify,\n    };\n    LoginImpl.extend(authdata, this.basicAuth);\n    return new SessionBuilderImpl(this.options, authdata);\n  }\n}\n\nexport {\n  LoginImpl,\n};\n"]}