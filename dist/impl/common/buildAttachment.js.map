{"version":3,"sources":["../src/impl/common/buildAttachment.ts"],"names":[],"mappings":";;IAIA;QAKE,+BAAY,UAAsB,EAAE,UAAuB;YACzD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC;QAEM,kCAAE,GAAT,UAAU,QAA6B;YACrC,IAAM,IAAI,GAAa,IAAI,QAAQ,EAAE,CAAC;YACtC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC3C,IAAM,GAAG,GAAM,IAAI,CAAC,UAAU,CAAC,MAAM,gBAAa,CAAC;YACnD,IAAM,MAAM,GAA8B,EAAE,CAAC;YAC7C,GAAG,CAAC,CAAC,IAAM,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;gBACxC,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,cAAc,CAAC,CAAC,CAAC;oBACvC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACzC,CAAC;YACH,CAAC;YACD,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,MAAM,EAAC,CAAC;iBACnC,IAAI,CAAC,UAAC,QAAQ;gBACb,MAAM,CAAC,QAAQ,CAAC,IAAgB,CAAC;YACnC,CAAC,CAAC;iBACD,IAAI,CAAC,UAAC,MAAM;gBACX,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACb,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBACzB,CAAC;YACH,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,CAAC;gBACP,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACb,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC;YACH,CAAC,CAAC,CAAC;QACT,CAAC;QACH,4BAAC;IAAD,CAnCA,AAmCC,IAAA;IAGC,6BAAqB,yBAHtB;IAIC","file":"buildAttachment.js","sourcesContent":["import * as axios from \"axios\";\nimport {AttachmentBuilder} from \"../../api/common\";\nimport {APIOptions, Callback} from \"../../model/models\";\n\nclass AttachmentBuilderImpl implements AttachmentBuilder {\n\n  private apiOptions: APIOptions;\n  private attachment: File | Blob;\n\n  constructor(apiOptions: APIOptions, attachment: File | Blob) {\n    this.apiOptions = apiOptions;\n    this.attachment = attachment;\n  }\n\n  public ok(callback?: Callback<string[]>): void {\n    const data: FormData = new FormData();\n    data.append(\"attachment\", this.attachment);\n    const url = `${this.apiOptions.server}/attachment`;\n    const header: { [key: string]: string } = {};\n    for (const k in this.apiOptions.headers) {\n      if (k.toLowerCase() !== \"content-type\") {\n        header[k] = this.apiOptions.headers[k];\n      }\n    }\n    axios.post(url, data, {headers: header})\n        .then((response) => {\n          return response.data as string[];\n        })\n        .then((result) => {\n          if (callback) {\n            callback(null, result);\n          }\n        })\n        .catch((e) => {\n          if (callback) {\n            callback(e);\n          }\n        });\n  }\n}\n\nexport {\n  AttachmentBuilderImpl,\n};\n"]}