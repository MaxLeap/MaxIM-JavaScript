{"version":3,"sources":["../src/impl/common/buildGetAttribute.ts"],"names":[],"mappings":";;IAIA;QAME,kCAAY,MAAqB,EAAE,EAAU,EAAE,IAAa;YAC1D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC;QAEM,0CAAO,GAAd,UAAe,QAAwB;YACrC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC;YACT,CAAC;YACD,IAAI,CAAC,OAAO,CAAC,UAAQ,IAAI,CAAC,EAAI,EAAE,QAAQ,CAAC,CAAC;QAC5C,CAAC;QAEM,2CAAQ,GAAf,UAAgB,QAAwB;YACtC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC;YACT,CAAC;YACD,IAAI,CAAC,OAAO,CAAC,aAAW,IAAI,CAAC,EAAI,EAAE,QAAQ,CAAC,CAAC;QAC/C,CAAC;QAEM,0CAAO,GAAd,UAAe,QAAwB;YACrC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC;YACT,CAAC;YACD,IAAI,CAAC,OAAO,CAAC,YAAU,IAAI,CAAC,EAAI,EAAE,QAAQ,CAAC,CAAC;QAC9C,CAAC;QAEO,0CAAO,GAAf,UAAgB,IAAY,EAAE,QAAuB;YACnD,IAAI,GAAG,GAAG,KAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,GAAG,IAAI,gBAAa,CAAC;YAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACd,GAAG,IAAI,MAAI,IAAI,CAAC,IAAM,CAAC;YACzB,CAAC;YAED,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO,EAAC,CAAC;iBACnD,IAAI,CAAC,UAAC,QAAQ;gBACb,MAAM,CAAC,QAAQ,CAAC,IAAc,CAAC;YACjC,CAAC,CAAC;iBACD,IAAI,CAAC,UAAC,MAAM;gBACX,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACb,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBACzB,CAAC;YACH,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,CAAC;gBACP,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACb,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC;YACH,CAAC,CAAC,CAAC;QACT,CAAC;QACH,+BAAC;IAAD,CAtDA,AAsDC,IAAA;IAGC,gCAAwB,4BAHzB;IAIC","file":"buildGetAttribute.js","sourcesContent":["import * as axios from \"axios\";\nimport {CommonService, GetAttributesBuilder} from \"../../api/common\";\nimport {Callback} from \"../../model/models\";\n\nclass GetAttributesBuilderImpl implements GetAttributesBuilder {\n\n  private id: string;\n  private attr: string;\n  private common: CommonService;\n\n  constructor(common: CommonService, id: string, attr?: string) {\n    this.common = common;\n    this.id = id;\n    this.attr = attr;\n  }\n\n  public forUser(callback?: Callback<any>) {\n    if (!callback) {\n      return;\n    }\n    this.forAttr(`/ctx/${this.id}`, callback);\n  }\n\n  public forGroup(callback?: Callback<any>) {\n    if (!callback) {\n      return;\n    }\n    this.forAttr(`/groups/${this.id}`, callback);\n  }\n\n  public forRoom(callback?: Callback<any>) {\n    if (!callback) {\n      return;\n    }\n    this.forAttr(`/rooms/${this.id}`, callback);\n  }\n\n  private forAttr(path: string, callback: Callback<any>) {\n    let url = `${this.common.options().server}${path}/attributes`;\n    if (this.attr) {\n      url += `/${this.attr}`;\n    }\n\n    axios.get(url, {headers: this.common.options().headers})\n        .then((response) => {\n          return response.data as string;\n        })\n        .then((result) => {\n          if (callback) {\n            callback(null, result);\n          }\n        })\n        .catch((e) => {\n          if (callback) {\n            callback(e);\n          }\n        });\n  }\n}\n\nexport {\n  GetAttributesBuilderImpl,\n};\n"]}