{"version":3,"sources":["../src/impl/passenger/passenger.ts"],"names":[],"mappings":"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","file":"passenger.js","sourcesContent":["import * as io from \"socket.io-client\";\nimport {PassengerBuilder, PassengerContext, PassengerSession,} from \"../../api/passenger\";\nimport {md5} from \"../../helper/md5\";\nimport {convert2basic, ParrotError} from \"../../helper/utils\";\nimport {BasicMessageFrom, MessageFrom, Receiver} from \"../../model/messages\";\nimport {APIOptions, Attributes, Callback2, Handler1, Handler2, LoginResult} from \"../../model/models\";\nimport {PassengerContextImpl} from \"./context\";\nimport {PassengerSessionImpl} from \"./session\";\n\nclass PassengerBuilderImpl implements PassengerBuilder {\n\n  private id: string;\n  private options: APIOptions;\n  private attributes: Attributes = [];\n  private fromUser: Array<Handler2<string, BasicMessageFrom>> = [];\n  private fromSystem: Array<Handler1<BasicMessageFrom>> = [];\n  private fromStrangerOnline: Array<Handler1<string>> = [];\n  private fromStrangerOffline: Array<Handler1<string>> = [];\n  private acks: Array<Handler2<number, number>> = [];\n\n  constructor(options: APIOptions, id?: string) {\n    this.options = options;\n    this.id = id;\n  }\n\n  public attribute(name: string, value: any): PassengerBuilder {\n    this.attributes[name] = value;\n    return this;\n  }\n\n  public onUserMessage(callback: Handler2<string, BasicMessageFrom>): PassengerBuilder {\n    this.fromUser.push(callback);\n    return this;\n  }\n\n  public onSystemMessage(callback: Handler1<BasicMessageFrom>): PassengerBuilder {\n    this.fromSystem.push(callback);\n    return this;\n  }\n\n  public onStrangerOnline(callback: Handler1<string>): PassengerBuilder {\n    this.fromStrangerOnline.push(callback);\n    return this;\n  }\n\n  public onStrangerOffline(callback: Handler1<string>): PassengerBuilder {\n    this.fromStrangerOffline.push(callback);\n    return this;\n  }\n\n  public onAck(callback: Handler2<number, number>): PassengerBuilder {\n    this.acks.push(callback);\n    return this;\n  }\n\n  public ok(callback: Callback2<PassengerSession, PassengerContext>) {\n    const url = `${this.options.server}/chat`;\n\n    const foo = new Date().getTime();\n    const bar = md5(`${foo}${this.options.sign}`) + \",\" + foo;\n    const qux: any = {};\n    const authdata = {\n      app: this.options.app,\n      sign: bar,\n      passenger: qux,\n    };\n\n    for (const k in this.attributes) {\n      if (k === \"id\") {\n        continue;\n      }\n      qux[k] = this.attributes[k];\n    }\n\n    if (this.id) {\n      qux.id = this.id;\n    }\n\n    const socket = io.connect(url, {\n      query: `auth=${JSON.stringify(authdata)}`,\n      transports: [\"websocket\"],\n    });\n    socket.once(\"login\", (result) => {\n      const foo = result as LoginResult;\n      if (foo.success) {\n        const session = new PassengerSessionImpl(socket, foo.id);\n        const ctx = new PassengerContextImpl(this.options, foo.id);\n        callback(null, session, ctx);\n      } else {\n        const err = new ParrotError({errorCode: foo.error, errorMessage: \"\"});\n        callback(err);\n      }\n    });\n\n    socket.on(\"message\", (income) => {\n      const msg = income as MessageFrom;\n      const basicmsg = convert2basic(msg);\n\n      switch (msg.from.type) {\n        case Receiver.ACTOR:\n          for (const handler of this.fromUser) {\n            handler(msg.from.id, basicmsg);\n          }\n          break;\n        default:\n          break;\n      }\n    });\n\n    socket.on(\"online_x\", (onlineid) => {\n      for (const handler of this.fromStrangerOnline) {\n        handler(onlineid as string);\n      }\n    });\n\n    socket.on(\"offline_x\", (offlineid) => {\n      for (const handler of this.fromStrangerOffline) {\n        handler(offlineid as string);\n      }\n    });\n\n    socket.on(\"sys\", (income) => {\n      const msg = income as BasicMessageFrom;\n      for (const handler of this.fromSystem) {\n        handler(msg);\n      }\n    });\n\n    socket.on(\"ack\", (income) => {\n      const msg = income as { ack: number, ts: number };\n      for (const it of this.acks) {\n        it(msg.ack, msg.ts);\n      }\n    });\n\n  }\n}\n\nexport {\n  PassengerBuilderImpl,\n};\n"]}