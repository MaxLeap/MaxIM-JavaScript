{"version":3,"sources":["../src/impl/admin/cmdMemberAppend.ts"],"names":[],"mappings":";;IAGA;QAKE,iCAAY,KAAY,EAAE,OAAiB;YACzC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG;gBACb,gBAAO;aACR,CAAC;QACJ,CAAC;QAEM,0CAAQ,GAAf,UAAgB,MAAc,EAAE,QAAyB;YACvD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,YAAU,MAAQ,EAAE,QAAQ,CAAC,CAAC;QACzD,CAAC;QAEM,2CAAS,GAAhB,UAAiB,OAAe,EAAE,QAAyB;YACzD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,aAAW,OAAS,EAAE,QAAQ,CAAC,CAAC;QAC3D,CAAC;QAEO,8CAAY,GAApB,UAAqB,IAAY,EAAE,QAAyB;YAC1D,IAAM,GAAG,GAAG,KAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,MAAM,GAAG,IAAI,aAAU,CAAC;YAC5D,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,OAAO,EAAC,CAAC;iBACjF,IAAI,CAAC,UAAC,MAAM;gBACX,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACb,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACvB,CAAC;YACH,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,CAAC;gBACP,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACb,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC;YACH,CAAC,CAAC,CAAC;YACP,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;QACH,8BAAC;IAAD,CAnCA,AAmCC,IAAA;IAGC,+BAAuB,2BAHxB;IAIC","file":"cmdMemberAppend.js","sourcesContent":["import {Admin, MemberAppendCommand} from \"../../api/admin\";\nimport {Callback} from \"../../model/models\";\n\nclass MemberAppendCommandImpl implements MemberAppendCommand {\n\n  private admin: Admin;\n  private members: { members: string[] };\n\n  constructor(admin: Admin, members: string[]) {\n    this.admin = admin;\n    this.members = {\n      members,\n    };\n  }\n\n  public intoRoom(roomid: string, callback?: Callback<void>): Admin {\n    return this.invokeAppend(`/rooms/${roomid}`, callback);\n  }\n\n  public intoGroup(groupid: string, callback?: Callback<void>): Admin {\n    return this.invokeAppend(`/groups/${groupid}`, callback);\n  }\n\n  private invokeAppend(path: string, callback?: Callback<void>): Admin {\n    const url = `${this.admin.options().server}${path}/members`;\n    axios.post(url, JSON.stringify(this.members), {headers: this.admin.options().headers})\n        .then((ignore) => {\n          if (callback) {\n            callback(null, null);\n          }\n        })\n        .catch((e) => {\n          if (callback) {\n            callback(e);\n          }\n        });\n    return this.admin;\n  }\n}\n\nexport {\n  MemberAppendCommandImpl,\n};\n"]}