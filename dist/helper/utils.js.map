{"version":3,"sources":["../src/helper/utils.ts"],"names":[],"mappings":";;;;;;;IACA;QAA0B,+BAAK;QAK3B,qBAAY,KAA+C;YACvD,kBAAM,KAAK,CAAC,YAAY,CAAC,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;YACjC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC;QACtC,CAAC;QAED,4BAAM,GAAN;YACI,MAAM,CAAC;gBACH,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,YAAY,EAAE,IAAI,CAAC,YAAY;aAClC,CAAC;QACN,CAAC;QACL,kBAAC;IAAD,CAlBA,AAkBC,CAlByB,KAAK,GAkB9B;IAeG,mBAAW,eAfd;IAED,uBAAuB,MAAmB;QACtC,IAAI,GAAG,GAAqB;YACxB,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,EAAE,EAAE,MAAM,CAAC,EAAE;SAChB,CAAC;QACF,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YACxB,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC/B,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IAGG,qBAAa,iBAHhB;IAKA","file":"utils.js","sourcesContent":["import {MessageFrom, BasicMessageFrom} from \"../model/messages\";\nclass ParrotError extends Error {\n    public message: string;\n    public errorCode: number;\n    public errorMessage: string;\n\n    constructor(error: {errorCode: number,errorMessage: string}) {\n        super(error.errorMessage);\n        this.errorCode = error.errorCode;\n        this.errorMessage = error.errorMessage;\n        this.message = error.errorMessage;\n    }\n\n    toJSON(): any {\n        return {\n            errorCode: this.errorCode,\n            errorMessage: this.errorMessage\n        };\n    }\n}\n\nfunction convert2basic(origin: MessageFrom): BasicMessageFrom {\n    let ret: BasicMessageFrom = {\n        content: origin.content,\n        ts: origin.ts\n    };\n    if (origin.remark != null) {\n        ret.remark = origin.remark;\n    }\n    return ret;\n}\n\nexport {\n    convert2basic,\n    ParrotError\n}"]}