{"version":3,"sources":["../src/api/admin.ts"],"names":[],"mappings":";;IAsRE","file":"admin.js","sourcesContent":["import {Attributes, Callback} from \"../model/models\";\nimport {CommonService} from \"./common\";\n\ninterface Admin extends CommonService {\n  /**\n   * 发送系统消息\n   * @param {string} text\n   * @param {string} remark\n   * @return {AdminMessageBuilder}\n   */\n  say(text: string, remark?: string): AdminMessageBuilder;\n\n  /**\n   * 属性设置\n   * @param {Attributes} attributes\n   * @param {boolean} overwrite\n   * @return {AttributeBuilder}\n   */\n  setAttributes(attributes: Attributes, overwrite?: boolean): AttributeBuilder;\n\n  /**\n   * 创建命令\n   * @return {CreateCommand}\n   */\n  create(): CreateCommand;\n\n  /**\n   * 销毁命令\n   * @return {DestroyCommand}\n   */\n  destroy(): DestroyCommand;\n\n  /**\n   * 移除成员命令\n   * @param {string} first\n   * @param {string} others\n   * @return {MemberRemoveCommand}\n   */\n  removeMembers(first: string, ...others: string[]): MemberRemoveCommand;\n\n  /**\n   * 追加成员命令\n   * @param {string} first\n   * @param {string} others\n   * @return {MemberAppendCommand}\n   */\n  appendMembers(first: string, ...others: string[]): MemberAppendCommand;\n\n}\n\n/**\n * 创建命令, 用于简化各种对象的创建过程.\n */\ninterface CreateCommand {\n\n  /**\n   * 创建一个群组.\n   * @param {string} owner\n   * @return {GroupBuilder}\n   */\n  group(owner: string): GroupBuilder;\n\n  /**\n   * 创建一个聊天室.\n   * @return {RoomBuilder}\n   */\n  room(): RoomBuilder;\n}\n\n/**\n * 销毁命令, 用于简化各种对象的销毁过程.\n */\ninterface DestroyCommand {\n\n  /**\n   * 销毁一个群组.\n   * @param {string} groupid\n   * @return {GroupDestroy}\n   */\n  group(groupid: string): GroupDestroy;\n\n  /**\n   * 销毁一个聊天室.\n   * @param {string} roomid\n   * @return {RoomDestroy}\n   */\n  room(roomid: string): RoomDestroy;\n}\n\n/**\n * 群组销毁器.\n */\ninterface GroupDestroy {\n  /**\n   * 提交执行.\n   * @param {Callback<void>} callback\n   * @return {Admin}\n   */\n  ok(callback?: Callback<void>): Admin;\n}\n\n/**\n * 聊天室销毁器.\n */\ninterface RoomDestroy {\n  /**\n   * 提交执行.\n   * @param {Callback<void>} callback\n   * @return {Admin}\n   */\n  ok(callback?: Callback<void>): Admin;\n}\n\n/**\n * 群组构建器.\n */\ninterface GroupBuilder {\n  /**\n   * 设定属性.\n   * @param {string} key\n   * @param value\n   * @return {GroupBuilder}\n   */\n  attribute(key: string, value: any): GroupBuilder;\n\n  /**\n   * 设定成员.\n   * @param {string} first\n   * @param {string} others\n   * @return {GroupBuilder}\n   */\n  members(first: string, ...others: string[]): GroupBuilder;\n\n  /**\n   * 提交执行.\n   * @param {Callback<string>} callback\n   * @return {Admin}\n   */\n  ok(callback?: Callback<string>): Admin;\n}\n\n/**\n * 成员添加命令\n */\ninterface MemberAppendCommand {\n  /**\n   * 设定添加到聊天室.\n   * @param {string} roomid\n   * @param {Callback<void>} callback\n   * @return {Admin}\n   */\n  intoRoom(roomid: string, callback?: Callback<void>): Admin;\n\n  /**\n   * 设定添加到群组.\n   * @param {string} groupid\n   * @param {Callback<void>} callback\n   * @return {Admin}\n   */\n  intoGroup(groupid: string, callback?: Callback<void>): Admin;\n}\n\n/**\n * 成员移除命令.\n */\ninterface MemberRemoveCommand {\n\n  /**\n   * 设定从聊天室中移除.\n   * @param {string} roomid\n   * @param {Callback<void>} callback\n   * @return {Admin}\n   */\n  fromRoom(roomid: string, callback?: Callback<void>): Admin;\n\n  /**\n   * 设定从群组中移除.\n   * @param {string} groupid\n   * @param {Callback<void>} callback\n   * @return {Admin}\n   */\n  fromGroup(groupid: string, callback?: Callback<void>): Admin;\n}\n\n/**\n * 消息构建器\n */\ninterface AdminMessageBuilder {\n\n  asText(): AdminMessageBuilder;\n\n  asImage(): AdminMessageBuilder;\n\n  asAudio(): AdminMessageBuilder;\n\n  asVideo(): AdminMessageBuilder;\n\n  disablePush(): AdminMessageBuilder;\n\n  setPushSound(sound: string): AdminMessageBuilder;\n\n  setPushBadge(badge: number): AdminMessageBuilder;\n\n  setPushContentAvailable(contentAvailable: boolean): AdminMessageBuilder;\n\n  setPushPrefix(prefix: string): AdminMessageBuilder;\n\n  setPushSuffix(suffix: string): AdminMessageBuilder;\n\n  setPushTextOverwrite(text: string): AdminMessageBuilder;\n\n  toAll(): AdminMessageLauncher;\n\n  toUser(userid: string): AdminMessageLauncher;\n\n  toGroup(groupid: string): AdminMessageLauncher;\n\n  toRoom(roomid: string): AdminMessageLauncher;\n}\n\n/**\n * 消息发射器.\n */\ninterface AdminMessageLauncher {\n  ok(callback?: Callback<void>): Admin;\n}\n\n/**\n * 属性构建器.\n */\ninterface AttributeBuilder {\n\n  /**\n   * 设定对象为用户.\n   * @param {string} userid\n   * @param {Callback<void>} callback\n   * @return {Admin}\n   */\n  forUser(userid: string, callback?: Callback<void>): Admin;\n\n  /**\n   * 设定对象为群组.\n   * @param {string} groupid\n   * @param {Callback<void>} callback\n   * @return {Admin}\n   */\n  forGroup(groupid: string, callback?: Callback<void>): Admin;\n\n  /**\n   * 设定对象为聊天室.\n   * @param {string} roomid\n   * @param {Callback<void>} callback\n   * @return {Admin}\n   */\n  forRoom(roomid: string, callback?: Callback<void>): Admin;\n}\n\ninterface RoomBuilder {\n  attribute(key: string, value: any): RoomBuilder;\n\n  members(first: string, ...others: string[]): RoomBuilder;\n\n  ok(callback?: Callback<string>): Admin;\n}\n\nexport {\n  CreateCommand,\n  DestroyCommand,\n  GroupDestroy,\n  RoomDestroy,\n  GroupBuilder,\n  MemberAppendCommand,\n  MemberRemoveCommand,\n  AdminMessageBuilder,\n  AdminMessageLauncher,\n  AttributeBuilder,\n  RoomBuilder,\n  Admin,\n};\n"]}