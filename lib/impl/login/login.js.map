{"version":3,"sources":["../src/impl/login/login.ts"],"names":[],"mappings":";AAEA,oBAAkB,kBAAkB,CAAC,CAAA;AAErC,6BAAiC,yBAAyB,CAAC,CAAA;AAE3D,gBAAgB,MAAU,EAAE,MAAU;IACpC,GAAG,CAAC,CAAC,IAAM,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;QACvB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC;IACH,CAAC;AACH,CAAC;AAKD;IAKE,mBAAY,UAAsB;QAChC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;QAC1B,IAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACjC,IAAM,GAAG,GAAG,SAAG,CAAC,KAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG;YACf,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG;YACrB,IAAI,EAAE,GAAG;SACV,CAAC;IACJ,CAAC;IAEM,0BAAM,GAAb,UAAc,MAAc;QAC1B,IAAM,QAAQ,GAAG;YACf,MAAM,EAAE,MAAM;SACf,CAAC;QACF,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,iCAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACxD,CAAC;IAEM,iCAAa,GAApB,UAAqB,QAAgB,EAAE,QAAgB;QACrD,IAAM,QAAQ,GAAG;YACf,kBAAQ;YACR,kBAAQ;SACT,CAAC;QACF,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,iCAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACxD,CAAC;IAEM,2BAAO,GAAd,UAAe,KAAa,EAAE,MAAc;QAC1C,IAAM,QAAQ,GAAG;YACf,YAAK;YACL,QAAQ,EAAE,MAAM;SACjB,CAAC;QACF,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,iCAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACxD,CAAC;IACH,gBAAC;AAAD,CAxCA,AAwCC,IAAA;AAGC,iBAAS,aAHV;AAIC","file":"login.js","sourcesContent":["import {Login} from \"../../api/login\";\nimport {SessionBuilder} from \"../../api/session\";\nimport {md5} from \"../../helper/md5\";\nimport {APIOptions} from \"../../model/models\";\nimport {SessionBuilderImpl} from \"../session/buildSession\";\n\nfunction extend(target: {}, source: {}): void {\n  for (const k in source) {\n    if ((typeof k) === \"string\") {\n      target[k] = source[k];\n    }\n  }\n}\n\n/**\n * 登录器实现类\n */\nclass LoginImpl implements Login {\n\n  private options: APIOptions;\n  private basicAuth: {};\n\n  constructor(apiOptions: APIOptions) {\n    this.options = apiOptions;\n    const foo = new Date().getTime();\n    const bar = md5(`${foo}${this.options.sign}`) + \",\" + foo;\n    this.basicAuth = {\n      app: this.options.app,\n      sign: bar,\n    };\n  }\n\n  public simple(userid: string): SessionBuilder {\n    const authdata = {\n      client: userid,\n    };\n    extend(authdata, this.basicAuth);\n    return new SessionBuilderImpl(this.options, authdata);\n  }\n\n  public byMaxleapUser(username: string, password: string): SessionBuilder {\n    const authdata = {\n      username,\n      password,\n    };\n    extend(authdata, this.basicAuth);\n    return new SessionBuilderImpl(this.options, authdata);\n  }\n\n  public byPhone(phone: string, verify: string): SessionBuilder {\n    const authdata = {\n      phone,\n      password: verify,\n    };\n    extend(authdata, this.basicAuth);\n    return new SessionBuilderImpl(this.options, authdata);\n  }\n}\n\nexport {\n  LoginImpl,\n};\n"]}