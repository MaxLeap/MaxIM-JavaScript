{"version":3,"sources":["../src/impl/common/buildLoad.ts"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAG/B,wBAAsB,WAAW,CAAC,CAAA;AAMlC;IAA8B,mCAAoB;IAAlD;QAA8B,8BAAoB;IAmClD,CAAC;IAjCQ,iCAAO,GAAd,UAAe,QAA8B;QAC3C,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACtC,CAAC;IAEM,kCAAQ,GAAf,UAAgB,QAA6B;QAC3C,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACzC,CAAC;IAEM,iCAAO,GAAd,UAAe,QAA4B;QACzC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACxC,CAAC;IAEM,sCAAY,GAAnB,UAAoB,QAA6B;QAC/C,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAEO,sCAAY,GAApB,UAAwB,IAAY,EAAE,QAAqB;QACzD,IAAM,GAAG,GAAG,KAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,SAAI,IAAI,CAAC,UAAU,CAAC,EAAI,CAAC;QACrE,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAC,CAAC;aACpD,IAAI,CAAC,UAAC,QAAQ;YACb,MAAM,CAAC,QAAQ,CAAC,IAAS,CAAC;QAC5B,CAAC,CAAC;aACD,IAAI,CAAC,UAAC,MAAM;YACX,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACzB,CAAC;QACH,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,CAAC;YACP,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,QAAQ,CAAC,CAAC,CAAC,CAAC;YACd,CAAC;QACH,CAAC,CAAC,CAAC;IACT,CAAC;IACH,sBAAC;AAAD,CAnCA,AAmCC,CAnC6B,iBAAO,GAmCpC;AAGC,uBAAe,mBAHhB;AAIC","file":"buildLoad.js","sourcesContent":["import * as axios from \"axios\";\nimport {LoadBuilder} from \"../../api/common\";\nimport {Callback, GroupInfo, Passenger, RoomInfo, UserDetail} from \"../../model/models\";\nimport {Builder} from \"./builder\";\n\ninterface LoadOptions {\n  id: string;\n}\n\nclass LoadBuilderImpl extends Builder<LoadOptions> implements LoadBuilder {\n\n  public forUser(callback: Callback<UserDetail>) {\n    this.forSomething(\"/ctx\", callback);\n  }\n\n  public forGroup(callback: Callback<GroupInfo>) {\n    this.forSomething(\"/groups\", callback);\n  }\n\n  public forRoom(callback: Callback<RoomInfo>) {\n    this.forSomething(\"/rooms\", callback);\n  }\n\n  public forPassenger(callback: Callback<Passenger>) {\n    this.forSomething(\"/passengers\", callback);\n  }\n\n  private forSomething<T>(path: string, callback: Callback<T>) {\n    const url = `${this.apiOptions.server}${path}/${this.extOptions.id}`;\n    axios.post(url, null, {headers: this.apiOptions.headers})\n        .then((response) => {\n          return response.data as T;\n        })\n        .then((result) => {\n          if (callback) {\n            callback(null, result);\n          }\n        })\n        .catch((e) => {\n          if (callback) {\n            callback(e);\n          }\n        });\n  }\n}\n\nexport {\n  LoadBuilderImpl,\n};\n"]}