{"version":3,"sources":["../src/impl/common/buildAttachment.ts"],"names":[],"mappings":";AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAI/B;IAKE,+BAAY,UAAsB,EAAE,UAAuB;QACzD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAEM,kCAAE,GAAT,UAAU,QAA6B;QACrC,IAAM,IAAI,GAAa,IAAI,QAAQ,EAAE,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3C,IAAM,GAAG,GAAM,IAAI,CAAC,UAAU,CAAC,MAAM,gBAAa,CAAC;QACnD,IAAM,MAAM,GAA8B,EAAE,CAAC;QAC7C,GAAG,CAAC,CAAC,IAAM,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YACxC,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,cAAc,CAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACzC,CAAC;QACH,CAAC;QACD,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,MAAM,EAAC,CAAC;aACnC,IAAI,CAAC,UAAC,QAAQ;YACb,MAAM,CAAC,QAAQ,CAAC,IAAgB,CAAC;QACnC,CAAC,CAAC;aACD,IAAI,CAAC,UAAC,MAAM;YACX,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACzB,CAAC;QACH,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,CAAC;YACP,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,QAAQ,CAAC,CAAC,CAAC,CAAC;YACd,CAAC;QACH,CAAC,CAAC,CAAC;IACT,CAAC;IACH,4BAAC;AAAD,CAnCA,AAmCC,IAAA;AAGC,6BAAqB,yBAHtB;AAIC","file":"buildAttachment.js","sourcesContent":["import * as axios from \"axios\";\nimport {AttachmentBuilder} from \"../../api/common\";\nimport {APIOptions, Callback} from \"../../model/models\";\n\nclass AttachmentBuilderImpl implements AttachmentBuilder {\n\n  private apiOptions: APIOptions;\n  private attachment: File | Blob;\n\n  constructor(apiOptions: APIOptions, attachment: File | Blob) {\n    this.apiOptions = apiOptions;\n    this.attachment = attachment;\n  }\n\n  public ok(callback?: Callback<string[]>): void {\n    const data: FormData = new FormData();\n    data.append(\"attachment\", this.attachment);\n    const url = `${this.apiOptions.server}/attachment`;\n    const header: { [key: string]: string } = {};\n    for (const k in this.apiOptions.headers) {\n      if (k.toLowerCase() !== \"content-type\") {\n        header[k] = this.apiOptions.headers[k];\n      }\n    }\n    axios.post(url, data, {headers: header})\n        .then((response) => {\n          return response.data as string[];\n        })\n        .then((result) => {\n          if (callback) {\n            callback(null, result);\n          }\n        })\n        .catch((e) => {\n          if (callback) {\n            callback(e);\n          }\n        });\n  }\n}\n\nexport {\n  AttachmentBuilderImpl,\n};\n"]}