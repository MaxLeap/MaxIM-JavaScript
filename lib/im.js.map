{"version":3,"sources":["../src/im.ts"],"names":[],"mappings":";AAAA,sBAA+B,iBAAiB,CAAC,CAAA;AACjD,sBAA+B,iBAAiB,CAAC,CAAA;AACjD,uBAAyB,gBAAgB,CAAC,CAAA;AAC1C,0BAAqD,qBAAqB,CAAC,CAAA;AAyB3E;IAKI,mBAAY,OAAqB;QAC7B,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3C,MAAM,IAAI,KAAK,CAAC,sBAAoB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAG,CAAC,CAAC;QACnE,CAAC;QAED,IAAI,MAAc,EAAE,QAAQ,GAAW,OAAO,CAAC,OAAO,GAAG,SAAS,GAAG,UAAU,CAAC;QAChF,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAC7C,KAAK,IAAI;gBACL,MAAM,GAAG,gBAAgB,CAAC;gBAC1B,KAAK,CAAC;YACV,KAAK,IAAI;gBACL,MAAM,GAAG,eAAe,CAAC;gBACzB,KAAK,CAAC;YACV,KAAK,MAAM;gBACP,MAAM,GAAG,kBAAkB,CAAC;gBAC5B,KAAK,CAAC;YACV;gBACI,MAAM,IAAI,KAAK,CAAC,oBAAkB,OAAO,CAAC,MAAQ,CAAC,CAAC;QAC5D,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAU,CAAC,KAAG,QAAQ,GAAG,MAAQ,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACjF,IAAI,CAAC,MAAM,GAAG,IAAI,iBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAED,yBAAK,GAAL;QACI,MAAM,CAAC,IAAI,iBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC;IAED,6BAAS,GAAT,UAAU,EAAW;QACjB,MAAM,CAAC,IAAI,gCAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACvD,CAAC;IAED,yBAAK,GAAL;QACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IACL,gBAAC;AAAD,CAvCA,AAuCC,IAAA;AAED,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;IAChC,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC;IACzB,EAAE,CAAC,CAAC,OAAO,MAAM,CAAC,EAAE,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;IACpB,CAAC;IACD,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,OAAqB;QAC5C,MAAM,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,CAAA;IACjC,CAAC,CAAC;AACN,CAAC;AAED,iBAAS,UAAC,OAAqB,IAAY,OAAA,IAAI,SAAS,CAAC,OAAO,CAAC,EAAtB,CAAsB,CAAC","file":"im.js","sourcesContent":["import {Admin, AdminImpl} from \"./service/admin\";\nimport {Login, LoginImpl} from \"./service/login\";\nimport {APIOptions} from \"./model/models\";\nimport {PassengerBuilder, PassengerBuilderImpl} from \"./service/passenger\";\n\ninterface MaxIMOptions {\n    app: string;\n    key: string;\n    region?: string;\n    useHttp?: boolean;\n}\n\ninterface MaxIM {\n    /**\n     * 登录\n     */\n    login(): Login;\n    /**\n     * 访客登录\n     * @param id 访客ID\n     */\n    passenger(id?: string): PassengerBuilder;\n    /**\n     * 获取管理接口\n     */\n    admin(): Admin;\n}\n\nclass MaxIMImpl implements MaxIM {\n\n    private _options: APIOptions;\n    private _admin: Admin;\n\n    constructor(options: MaxIMOptions) {\n        if (!options || !options.app || !options.key) {\n            throw new Error(`invalid options: ${JSON.stringify(options)}`);\n        }\n\n        let server: string, protocol: string = options.useHttp ? 'http://' : 'https://';\n        switch ((options.region || 'cn').toLowerCase()) {\n            case 'us':\n                server = 'im.maxleap.com';\n                break;\n            case 'cn':\n                server = 'im.maxleap.cn';\n                break;\n            case 'test':\n                server = 'imuat.maxleap.cn';\n                break;\n            default:\n                throw new Error(`invalid region ${options.region}`);\n        }\n        this._options = new APIOptions(`${protocol}${server}`, options.app, options.key);\n        this._admin = new AdminImpl(this._options);\n    }\n\n    login(): Login {\n        return new LoginImpl(this._options);\n    }\n\n    passenger(id?: string): PassengerBuilder {\n        return new PassengerBuilderImpl(this._options, id);\n    }\n\n    admin(): Admin {\n        return this._admin;\n    }\n}\n\nif (typeof window !== 'undefined') {\n    let ml = 'ML', im = 'im';\n    if (typeof window[ml] === 'undefined') {\n        window[ml] = {};\n    }\n    window[ml][im] = function (options: MaxIMOptions): MaxIM {\n        return new MaxIMImpl(options)\n    };\n}\n\nexport = (options: MaxIMOptions): MaxIM => new MaxIMImpl(options);"]}