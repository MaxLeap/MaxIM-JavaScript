{"version":3,"sources":["../src/helper/utils.ts"],"names":[],"mappings":";;;;;;AAEA;IAA0B,+BAAK;IAK7B,qBAAY,KAAkD;QAC5D,kBAAM,KAAK,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC;IACpC,CAAC;IAEM,4BAAM,GAAb;QACE,MAAM,CAAC;YACL,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC;IACJ,CAAC;IACH,kBAAC;AAAD,CAlBA,AAkBC,CAlByB,KAAK,GAkB9B;AAeC,mBAAW,eAfZ;AAED,uBAAuB,MAAmB;IACxC,IAAM,GAAG,GAAqB;QAC5B,OAAO,EAAE,MAAM,CAAC,OAAO;QACvB,EAAE,EAAE,MAAM,CAAC,EAAE;KACd,CAAC;IACF,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;QAC1B,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC7B,CAAC;IACD,MAAM,CAAC,GAAG,CAAC;AACb,CAAC;AAGC,qBAAa,iBAHd;AAKC","file":"utils.js","sourcesContent":["import {BasicMessageFrom, MessageFrom} from \"../model/messages\";\n\nclass ParrotError extends Error {\n  public message: string;\n  public errorCode: number;\n  public errorMessage: string;\n\n  constructor(error: { errorCode: number, errorMessage: string }) {\n    super(error.errorMessage);\n    this.errorCode = error.errorCode;\n    this.errorMessage = error.errorMessage;\n    this.message = error.errorMessage;\n  }\n\n  public toJSON(): any {\n    return {\n      errorCode: this.errorCode,\n      errorMessage: this.errorMessage,\n    };\n  }\n}\n\nfunction convert2basic(origin: MessageFrom): BasicMessageFrom {\n  const ret: BasicMessageFrom = {\n    content: origin.content,\n    ts: origin.ts,\n  };\n  if (origin.remark != null) {\n    ret.remark = origin.remark;\n  }\n  return ret;\n}\n\nexport {\n  convert2basic,\n  ParrotError,\n};\n"]}