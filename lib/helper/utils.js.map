{"version":3,"sources":["../src/helper/utils.ts"],"names":[],"mappings":";;;;;;AACA;IAA0B,+BAAK;IAK3B,qBAAY,KAA+C;QACvD,kBAAM,KAAK,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC;IACtC,CAAC;IAED,4BAAM,GAAN;QACI,MAAM,CAAC;YACH,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,YAAY,EAAE,IAAI,CAAC,YAAY;SAClC,CAAC;IACN,CAAC;IACL,kBAAC;AAAD,CAlBA,AAkBC,CAlByB,KAAK,GAkB9B;AAeG,mBAAW,eAfd;AAED,uBAAuB,MAAmB;IACtC,IAAI,GAAG,GAAqB;QACxB,OAAO,EAAE,MAAM,CAAC,OAAO;QACvB,EAAE,EAAE,MAAM,CAAC,EAAE;KAChB,CAAC;IACF,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;QACxB,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC/B,CAAC;IACD,MAAM,CAAC,GAAG,CAAC;AACf,CAAC;AAGG,qBAAa,iBAHhB;AAKA","file":"utils.js","sourcesContent":["import {MessageFrom, BasicMessageFrom} from \"../model/messages\";\nclass ParrotError extends Error {\n    public message: string;\n    public errorCode: number;\n    public errorMessage: string;\n\n    constructor(error: {errorCode: number,errorMessage: string}) {\n        super(error.errorMessage);\n        this.errorCode = error.errorCode;\n        this.errorMessage = error.errorMessage;\n        this.message = error.errorMessage;\n    }\n\n    toJSON(): any {\n        return {\n            errorCode: this.errorCode,\n            errorMessage: this.errorMessage\n        };\n    }\n}\n\nfunction convert2basic(origin: MessageFrom): BasicMessageFrom {\n    let ret: BasicMessageFrom = {\n        content: origin.content,\n        ts: origin.ts\n    };\n    if (origin.remark != null) {\n        ret.remark = origin.remark;\n    }\n    return ret;\n}\n\nexport {\n    convert2basic,\n    ParrotError\n}"]}