{"version":3,"sources":["../src/service/common.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import {UserDetail, GroupInfo, RoomInfo, UserOutline, Passenger, APIOptions, Callback} from \"../model/models\";\nimport axios = require('axios');\nimport ResponseInterceptor = Axios.ResponseInterceptor;\n\ninterface SearchBuilder {\n    forUsers(callback: Callback<UserOutline[]>);\n    forGroups(callback: Callback<GroupInfo[]>);\n    forRooms(callback: Callback<RoomInfo[]>);\n}\n\ninterface LoadBuilder {\n    forUser(callback: Callback<UserDetail>);\n    forGroup(callback: Callback<GroupInfo>);\n    forRoom(callback: Callback<RoomInfo>);\n    forPassenger(callback: Callback<Passenger>);\n}\n\ninterface GetAttributesBuilder {\n    forUser(callback?: Callback<any>);\n    forGroup(callback?: Callback<any>);\n    forRoom(callback?: Callback<any>);\n}\n\ninterface CommonService {\n    /**\n     * 获取当前基础设定\n     */\n    options(): APIOptions;\n    /**\n     * 搜索对象\n     * @param query 查询条件\n     * @param skip 跳过记录数\n     * @param limit 返回记录条数\n     * @param sort 排序\n     */\n    search(query?: {[key: string]: any}, skip?: number, limit?: number, sort?: string[]): SearchBuilder;\n    /**\n     * 载入对象\n     * @param id 对象ID\n     */\n    load(id: string): LoadBuilder;\n\n    /**\n     * 获取属性\n     * @param id\n     */\n    getAttributes(id: string, attributeName?: string): GetAttributesBuilder;\n\n    /**\n     * 上传附件\n     * @param attachment\n     */\n    attachment(attachment: File|Blob): AttachmentBuilder;\n}\n\ninterface AttachmentBuilder {\n    ok(callback?: Callback<string[]>);\n}\n\ninterface LoadOptions {\n    id: string;\n}\n\ninterface SearchOptions {\n    query?: {[key: string]: any};\n    skip?: number;\n    limit?: number;\n    sort?: string[];\n}\n\nclass AttachmentBuilderImpl implements AttachmentBuilder {\n\n    private apiOptions: APIOptions;\n    private attachment: File|Blob;\n\n    constructor(apiOptions: APIOptions, attachment: File|Blob) {\n        this.apiOptions = apiOptions;\n        this.attachment = attachment;\n    }\n\n    ok(callback?: Callback<string[]>): void {\n        let data: FormData = new FormData();\n        data.append('attachment', this.attachment);\n        let url = `${this.apiOptions.server}/attachment`;\n        let header: {[key: string]: string} = {};\n        for (let k in this.apiOptions.headers) {\n            if (k.toLowerCase() !== 'content-type') {\n                header[k] = this.apiOptions.headers[k];\n            }\n        }\n\n        axios.post(url, data, {headers: header})\n            .then(response => {\n                return response.data as string[];\n            })\n            .then(result => {\n                if (callback) {\n                    callback(null, result);\n                }\n            })\n            .catch(e => {\n                if (callback) {\n                    callback(e);\n                }\n            });\n    }\n}\n\nclass GetAttributesBuilderImpl implements GetAttributesBuilder {\n\n    private id: string;\n    private attr: string;\n    private common: CommonServiceImpl;\n\n    constructor(common: CommonServiceImpl, id: string, attr?: string) {\n        this.common = common;\n        this.id = id;\n        this.attr = attr;\n    }\n\n    private forAttr(path: string, callback: Callback<any>) {\n        let url = `${this.common.options().server}${path}/attributes`;\n        if (this.attr) {\n            url += `/${this.attr}`;\n        }\n\n        axios.get(url, {headers: this.common.options().headers})\n            .then(response => {\n                return response.data as string;\n            })\n            .then(result => {\n                if (callback) {\n                    callback(null, result);\n                }\n            })\n            .catch(e => {\n                if (callback) {\n                    callback(e);\n                }\n            });\n    }\n\n    forUser(callback?: Callback<any>) {\n        if (!callback) {\n            return;\n        }\n        this.forAttr(`/ctx/${this.id}`, callback);\n    }\n\n    forGroup(callback?: Callback<any>) {\n        if (!callback) {\n            return;\n        }\n        this.forAttr(`/groups/${this.id}`, callback);\n    }\n\n    forRoom(callback?: Callback<any>) {\n        if (!callback) {\n            return;\n        }\n        this.forAttr(`/rooms/${this.id}`, callback);\n    }\n}\n\nclass Builder<T> {\n    apiOptions: APIOptions;\n    extOptions: T;\n\n    constructor(apiOptions: APIOptions, extOptions?: T) {\n        this.apiOptions = apiOptions;\n        this.extOptions = extOptions;\n    }\n}\n\nclass LoadBuilderImpl extends Builder<LoadOptions> implements LoadBuilder {\n\n    private forSomething<T>(path: string, callback: Callback<T>) {\n        let url = `${this.apiOptions.server}${path}/${this.extOptions.id}`;\n\n        axios.post(url, null, {headers: this.apiOptions.headers})\n            .then(response => {\n                return response.data as T;\n            })\n            .then(result => {\n                if (callback) {\n                    callback(null, result);\n                }\n            })\n            .catch(e => {\n                if (callback) {\n                    callback(e);\n                }\n            });\n    }\n\n    forUser(callback: Callback<UserDetail>) {\n        this.forSomething('/ctx', callback);\n    }\n\n    forGroup(callback: Callback<GroupInfo>) {\n        this.forSomething('/groups', callback);\n    }\n\n    forRoom(callback: Callback<RoomInfo>) {\n        this.forSomething('/rooms', callback);\n    }\n\n    forPassenger(callback: Callback<Passenger>) {\n        this.forSomething('/passengers', callback);\n    }\n}\n\nclass SearchBuilderImpl extends Builder<SearchOptions> implements SearchBuilder {\n\n    private getUrl(path: string): string {\n        let q: string[] = [];\n        for (let k in this.extOptions.query) {\n            let v = this.extOptions.query[k];\n            q.push(`${k}=${v}`);\n        }\n        q.push(`_skip=${this.extOptions.skip || 0}`);\n        q.push(`_limit=${this.extOptions.limit || 20}`);\n        return `${this.apiOptions.server}${path}?${q.join('&')}`;\n    }\n\n    private forSomething<T>(path: string, callback: Callback<T>) {\n        let url = this.getUrl(path);\n\n\n        axios.get(url, {headers: this.apiOptions.headers})\n            .then(response => {\n                return response.data as T;\n            })\n            .then(result => {\n                if (callback) {\n                    callback(null, result);\n                }\n            })\n            .catch(e => {\n                if (callback) {\n                    callback(e);\n                }\n            });\n    }\n\n    forUsers(callback?: Callback<UserOutline[]>) {\n        this.forSomething('/ctx', callback);\n    }\n\n    forGroups(callback?: Callback<GroupInfo[]>) {\n        this.forSomething('/groups', callback);\n    }\n\n    forRooms(callback?: Callback<RoomInfo[]>) {\n        this.forSomething('/rooms', callback);\n    }\n}\n\nclass CommonServiceImpl implements CommonService {\n\n\n    private _options: APIOptions;\n\n    constructor(apiOptions: APIOptions) {\n        this._options = apiOptions;\n    }\n\n    options(): APIOptions {\n        return this._options;\n    }\n\n    search(query?: {}, skip?: number, limit?: number, sort?: string[]): SearchBuilder {\n        let searchOptions: SearchOptions = {\n            limit: limit,\n            skip: skip,\n            query: query,\n            sort: sort\n        };\n        return new SearchBuilderImpl(this._options, searchOptions);\n    }\n\n    load(id: string): LoadBuilder {\n        let opts = {\n            id: id\n        };\n        return new LoadBuilderImpl(this._options, opts);\n    }\n\n    getAttributes(id: string, attributeName?: string): GetAttributesBuilder {\n        return new GetAttributesBuilderImpl(this, id, attributeName);\n    }\n\n    attachment(attachment: File): AttachmentBuilder {\n        return new AttachmentBuilderImpl(this._options, attachment);\n    }\n}\n\nexport {\n    CommonService,\n    CommonServiceImpl\n}"]}