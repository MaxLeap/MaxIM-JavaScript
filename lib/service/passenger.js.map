{"version":3,"sources":["../src/service/passenger.ts"],"names":[],"mappings":"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","file":"passenger.js","sourcesContent":["import {Callback2, Attributes, APIOptions, Handler2, Handler1, LoginResult, Callback} from \"../model/models\";\nimport {BasicMessageFrom, MessageTo, Media, MessageFrom, Receiver, PushSettings} from \"../model/messages\";\nimport {md5} from \"../helper/md5\";\nimport {CommonService, CommonServiceImpl} from \"./common\";\nimport {ParrotError, convert2basic} from \"../helper/utils\";\nimport io = require('socket.io-client');\nimport Socket = SocketIOClient.Socket;\n\n\ninterface PassengerBuilder {\n    attribute(name: string, value: any): PassengerBuilder;\n    onUserMessage(callback: Handler2<string,BasicMessageFrom>): PassengerBuilder;\n    onSystemMessage(callback: Handler1<BasicMessageFrom>): PassengerBuilder;\n    onStrangerOnline(callback: Handler1<string>): PassengerBuilder;\n    onStrangerOffline(callback: Handler1<string>): PassengerBuilder;\n    ok(callback: Callback2<PassengerSession,PassengerContext>);\n}\n\ninterface PassengerSession {\n    say(text: string, remark?: string): MessageBuilder;\n    close(callback?: Callback<void>);\n}\n\n\ninterface MessageBuilder {\n\n    asText(): MessageBuilder;\n    asImage(): MessageBuilder;\n    asAudio(): MessageBuilder;\n    asVideo(): MessageBuilder;\n\n    disablePush(): MessageBuilder;\n    setPushSound(sound: string): MessageBuilder;\n    setPushBadge(badge: number): MessageBuilder;\n    setPushContentAvailable(contentAvailable: boolean): MessageBuilder;\n    setPushPrefix(prefix: string): MessageBuilder;\n    setPushSuffix(suffix: string): MessageBuilder;\n    setPushTextOverwrite(text: string): MessageBuilder;\n\n    toUser(userid: string): MessageLauncher;\n}\n\ninterface MessageLauncher {\n    ok(callback?: Callback<void>): PassengerSession;\n}\n\ninterface PassengerContext extends CommonService {\n\n    current(): string;\n\n}\n\nclass MessageBuilderImpl implements MessageBuilder {\n\n    message: MessageTo;\n    session: PassengerSessionImpl;\n\n    constructor(session: PassengerSessionImpl, text: string, remark?: string) {\n        this.session = session;\n        this.message = {\n            to: {\n                id: null\n            },\n            content: {\n                media: Media.TEXT,\n                body: text\n            }\n        };\n        if (remark != null) {\n            this.message.remark = remark;\n        }\n    }\n\n    private createPushIfNotExist(): PushSettings {\n        if (!this.message.push) {\n            this.message.push = {};\n        }\n        return this.message.push;\n    }\n\n    disablePush(): MessageBuilder {\n        this.createPushIfNotExist().enable = false;\n        return this;\n    }\n\n    setPushSound(sound: string): MessageBuilder {\n        this.createPushIfNotExist().sound = sound;\n        return this;\n    }\n\n    setPushBadge(badge: number): MessageBuilder {\n        this.createPushIfNotExist().badge = badge;\n        return this;\n    }\n\n    setPushContentAvailable(contentAvailable: boolean): MessageBuilder {\n        this.createPushIfNotExist().contentAvailable = contentAvailable;\n        return this;\n    }\n\n    setPushPrefix(prefix: string): MessageBuilder {\n        this.createPushIfNotExist().prefix = prefix;\n        return this;\n    }\n\n    setPushSuffix(suffix: string): MessageBuilder {\n        this.createPushIfNotExist().suffix = suffix;\n        return this;\n    }\n\n    setPushTextOverwrite(text: string): MessageBuilder {\n        this.createPushIfNotExist().overwrite = text;\n        return this;\n    }\n\n    asText(): MessageBuilder {\n        this.message.content.media = Media.TEXT;\n        return this;\n    }\n\n    asImage(): MessageBuilder {\n        this.message.content.media = Media.IMAGE;\n        return this;\n    }\n\n    asAudio(): MessageBuilder {\n        this.message.content.media = Media.AUDIO;\n        return this;\n    }\n\n    asVideo(): MessageBuilder {\n        this.message.content.media = Media.VIDEO;\n        return this;\n    }\n\n    toUser(userid: string): MessageLauncher {\n        this.message.to.id = userid;\n        return new MessageLauncherImpl(this.session, this.message);\n    }\n\n}\n\nclass MessageLauncherImpl implements MessageLauncher {\n\n    private _session: PassengerSessionImpl;\n    private _message: MessageTo;\n\n    constructor(session: PassengerSessionImpl, message: MessageTo) {\n        this._session = session;\n        this._message = message;\n    }\n\n    ok(callback?: Callback<void>): PassengerSession {\n        try {\n            this._session._socket.emit('say', this._message);\n            if (callback) {\n                callback(null, null);\n            }\n        } catch (e) {\n            if (callback) {\n                callback(e);\n            }\n        }\n        return this._session;\n    }\n}\n\n\nclass PassengerSessionImpl implements PassengerSession {\n\n    _socket: Socket;\n    _id: string;\n\n    private _closed: boolean;\n\n    constructor(socket: Socket, passengerid: string) {\n        this._socket = socket;\n        this._id = passengerid;\n    }\n\n    say(text: string, remark?: string): MessageBuilder {\n        return new MessageBuilderImpl(this, text, remark);\n    }\n\n    close(callback?: Callback<void>) {\n        if (this._closed) {\n            return;\n        }\n        this._closed = true;\n        this._socket.close();\n    }\n\n}\n\nclass PassengerContextImpl extends CommonServiceImpl implements PassengerContext {\n\n    private _you: string;\n\n    constructor(options: APIOptions, you: string) {\n        super(options);\n        this._you = you;\n    }\n\n    current(): string {\n        return this._you;\n    }\n\n}\n\nclass PassengerBuilderImpl implements PassengerBuilder {\n\n    private _id: string;\n    private _options: APIOptions;\n    private _attributes: Attributes = [];\n    private _fromuser: Handler2<string,BasicMessageFrom>[] = [];\n    private _fromsystem: Handler1<BasicMessageFrom>[] = [];\n    private _fromStrangerOnline: Handler1<string>[] = [];\n    private _fromStrangerOffline: Handler1<string>[] = [];\n\n    constructor(options: APIOptions, id?: string) {\n        this._options = options;\n        this._id = id;\n    }\n\n    attribute(name: string, value: any): PassengerBuilder {\n        this._attributes[name] = value;\n        return this;\n    }\n\n    onUserMessage(callback: Handler2<string, BasicMessageFrom>): PassengerBuilder {\n        this._fromuser.push(callback);\n        return this;\n    }\n\n    onSystemMessage(callback: Handler1<BasicMessageFrom>): PassengerBuilder {\n        this._fromsystem.push(callback);\n        return this;\n    }\n\n    onStrangerOnline(callback: Handler1<string>): PassengerBuilder {\n        this._fromStrangerOnline.push(callback);\n        return this;\n    }\n\n    onStrangerOffline(callback: Handler1<string>): PassengerBuilder {\n        this._fromStrangerOffline.push(callback);\n        return this;\n    }\n\n    ok(callback: Callback2<PassengerSession, PassengerContext>) {\n        let url = `${this._options.server}/chat`;\n\n        let foo = new Date().getTime();\n        let bar = md5(`${foo}${this._options.sign}`) + ',' + foo;\n        let authdata = {\n            app: this._options.app,\n            sign: bar,\n            passenger: {}\n        };\n\n        for (let k in this._attributes) {\n            if (k === 'id') {\n                continue;\n            }\n            authdata.passenger[k] = this._attributes[k];\n        }\n\n        if (this._id) {\n            authdata.passenger['id'] = this._id;\n        }\n\n        let socket = io.connect(url, {\n            query: `auth=${JSON.stringify(authdata)}`,\n            transports: ['websocket']\n        });\n        socket.once('login', result => {\n            let foo = result as LoginResult;\n            if (foo.success) {\n                let session = new PassengerSessionImpl(socket, foo.id);\n                let ctx = new PassengerContextImpl(this._options, foo.id);\n                callback(null, session, ctx);\n            } else {\n                let err = new ParrotError({errorCode: foo.error, errorMessage: ''});\n                callback(err);\n            }\n        });\n\n        socket.on('message', income=> {\n            let msg = income as MessageFrom;\n            let basicmsg = convert2basic(msg);\n\n            switch (msg.from.type) {\n                case Receiver.ACTOR:\n                    for (let handler of this._fromuser) {\n                        handler(msg.from.id, basicmsg);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        socket.on('online_x', onlineid => {\n            for (let handler of this._fromStrangerOnline) {\n                handler(onlineid as string);\n            }\n        });\n\n        socket.on('offline_x', offlineid => {\n            for (let handler of this._fromStrangerOffline) {\n                handler(offlineid as string);\n            }\n        });\n\n        socket.on('sys', income => {\n            let msg = income as BasicMessageFrom;\n            for (let handler of this._fromsystem) {\n                handler(msg);\n            }\n        });\n    }\n}\n\nexport {\n    PassengerBuilder,\n    PassengerBuilderImpl\n}"]}