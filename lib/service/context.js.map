{"version":3,"sources":["../src/service/context.ts"],"names":[],"mappings":"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","file":"context.js","sourcesContent":["import {CommonServiceImpl, CommonService} from \"./common\";\nimport {Friend, MyGroup, RoomInfo, ChatRecord, Attributes, APIOptions, Callback, UserOutline} from \"../model/models\";\nimport axios = require('axios');\nimport ResponseInterceptor = Axios.ResponseInterceptor;\n\ninterface TalkingBuilder {\n    ofFriend(friendid: string, callback?: Callback<ChatRecord[]>): Context;\n    ofGroup(groupid: string, callback?: Callback<ChatRecord[]>): Context;\n    ofStranger(strangerid: string, callback?: Callback<ChatRecord[]>): Context;\n    ofPassenger(passengerid: string, callback?: Callback<ChatRecord[]>): Context;\n}\n\nexport interface Context extends CommonService {\n\n    /**\n     * 列出好友详情\n     * @param callback\n     */\n    listFriends(callback?: Callback<Friend[]>): Context;\n\n    /**\n     * 列出已加入的群组\n     * @param callback\n     */\n    listGroups(callback?: Callback<MyGroup[]>): Context;\n\n    /**\n     * 列出已加入的聊天室\n     * @param callback\n     */\n    listRooms(callback?: Callback<RoomInfo[]>): Context;\n\n    /**\n     * 列出关联的陌生人列表, 分页查询\n     * @param callback\n     * @param skip\n     * @param limit\n     */\n    listStrangers(callback: Callback<UserOutline[]>, skip?: number, limit?: number): Context;\n\n    /**\n     * 查询聊天记录\n     * @param endTimestamp 最后截止时间戳\n     * @param size 返回记录数\n     */\n    listTalkings(endTimestamp?: number, size?: number): TalkingBuilder;\n\n    /**\n     * 添加好友\n     * @param userid 好友用户ID\n     * @param callback\n     */\n    joinFriend(userid: string, callback?: Callback<void>): Context;\n    /**\n     * 加入某个群组\n     * @param groupid 群组ID\n     * @param callback\n     */\n    joinGroup(groupid: string, callback?: Callback<void>): Context;\n    /**\n     * 加入某个聊天室\n     * @param roomid 聊天室ID\n     * @param callback\n     */\n    joinRoom(roomid: string, callback?: Callback<void>): Context;\n    /**\n     * 解除某个好友\n     * @param userid 好友ID\n     * @param callback\n     */\n    leaveFriend(userid: string, callback?: Callback<void>): Context;\n    /**\n     * 离开某个群组\n     * @param groupid 群组ID\n     * @param callback\n     */\n    leaveGroup(groupid: string, callback?: Callback<void>): Context;\n    /**\n     * 离开某个聊天室\n     * @param roomid 聊天室ID\n     * @param callback\n     */\n    leaveRoom(roomid: string, callback?: Callback<void>): Context;\n\n    /**\n     * 设置当前上下文用户的属性\n     * @param attributes 属性表\n     * @param overwrite 强制覆盖\n     * @param callback 回调\n     */\n    setMyAttributes(attributes: Attributes, overwrite?: boolean, callback?: Callback<void>): Context;\n\n    /**\n     * 设置当前上下文用户的单个属性\n     * @param name 属性名\n     * @param value 属性表\n     * @param callback 回调\n     */\n    setMyAttribute(name: string, value: any, callback?: Callback<void>): Context;\n\n    /**\n     * 获取当前上下文用户的属性列表\n     * @param callback\n     */\n    getMyAttributes(callback?: Callback<Attributes>): Context;\n\n    /**\n     * 获取当前上下文用户的某个属性\n     * @param attributeName\n     * @param callback\n     */\n    getMyAttribute(attributeName: string, callback?: Callback<any>): Context;\n\n}\n\n/**\n * TalkingBuilder实现类\n */\nclass TalkingBuilderImpl implements TalkingBuilder {\n\n    private ts: number;\n    private size: number;\n    private context: Context;\n    private you: string;\n    private apiOptions: APIOptions;\n\n    constructor(context: Context, ts: number, size: number, you: string, apiOptions: APIOptions) {\n        this.ts = ts;\n        this.size = size;\n        this.context = context;\n        this.you = you;\n        this.apiOptions = apiOptions;\n    }\n\n    private listHistories(path: string, callback: Callback<ChatRecord[]>): Context {\n        let url = `${this.apiOptions.server}${path}`;\n        let q: string[] = [];\n        if (this.ts > 0) {\n            q.push(`ts=${this.ts}`);\n        }\n        if (this.size > 0) {\n            q.push(`limit=${this.size}`);\n        }\n\n        if (q.length > 0) {\n            url += '?' + q.join('&');\n        }\n\n        axios.get(url, {headers: this.apiOptions.headers})\n            .then(response => {\n                return response.data as ChatRecord[];\n            })\n            .then(records => {\n                if (callback) {\n                    callback(null, records);\n                }\n            })\n            .catch(e => {\n                if (callback) {\n                    callback(e);\n                }\n            });\n\n        // let opts = {\n        //     headers: this.apiOptions.headers\n        // };\n        // fetch(url, opts)\n        //     .then(response => {\n        //         return response.json().then(result => [response.ok, result]);\n        //     })\n        //     .then(res => {\n        //         if (!res[0]) {\n        //             throw new ParrotError(res[1]);\n        //         } else if (callback) {\n        //             callback(null, res[1] as ChatRecord[]);\n        //         }\n        //     })\n        //     .catch(e => {\n        //         if (callback) {\n        //             callback(e);\n        //         }\n        //     });\n        return this.context;\n    }\n\n    ofFriend(friendid: string, callback?: Callback<ChatRecord[]>): Context {\n        if (!callback) {\n            return this.context;\n        }\n        let path = `/ctx/${this.you}/friends/${friendid}/chats`;\n        return this.listHistories(path, callback);\n    }\n\n    ofGroup(groupid: string, callback?: Callback<ChatRecord[]>): Context {\n        if (!callback) {\n            return this.context;\n        }\n        let path = `/groups/${groupid}/chats`;\n        return this.listHistories(path, callback);\n    }\n\n    ofStranger(strangerid: string, callback?: Callback<ChatRecord[]>): Context {\n        if (!callback) {\n            return this.context;\n        }\n        let path = `/ctx/${this.you}/strangers/${strangerid}/chats`;\n        return this.listHistories(path, callback);\n    }\n\n    ofPassenger(passengerid: string, callback?: Callback<ChatRecord[]>): Context {\n        if (!callback) {\n            return this.context;\n        }\n        let path = `/passengers/${passengerid}/chats/${this.you}`;\n        return this.listHistories(path, callback);\n    }\n}\n\n/**\n * 用户上下文实现类\n */\nexport class ContextImpl extends CommonServiceImpl implements Context {\n\n    private you: string;\n\n    constructor(apiOptions: APIOptions, you: string) {\n        super(apiOptions);\n        this.you = you;\n    }\n\n    private listSomething<T>(path: string, callback: Callback<T>) {\n        let url = `${super.options().server}${path}`;\n        axios.get(url, {headers: super.options().headers})\n            .then(response => {\n                return response.data as T;\n            })\n            .then(result => {\n                if (callback) {\n                    callback(null, result);\n                }\n            })\n            .catch(e => {\n                if (callback) {\n                    callback(e);\n                }\n            });\n        return this;\n    }\n\n    public listFriends(callback?: Callback<Friend[]>): Context {\n        if (!callback) {\n            return this;\n        }\n        let path = `/ctx/${this.you}/friends?detail`;\n        return this.listSomething(path, callback);\n    }\n\n    public listGroups(callback?: Callback<MyGroup[]>): Context {\n        if (!callback) {\n            return this;\n        }\n        let path = `/ctx/${this.you}/groups?detail`;\n        return this.listSomething(path, callback);\n    }\n\n    public listRooms(callback?: Callback<RoomInfo[]>): Context {\n        if (!callback) {\n            return this;\n        }\n        let path = `/ctx/${this.you}/rooms?detail`;\n        return this.listSomething(path, callback);\n    }\n\n    public listStrangers(callback: Callback<UserOutline[]>, skip?: number, limit?: number): Context {\n        if (!callback) {\n            return this;\n        }\n        let path = `/ctx/${this.you}/strangers?detail`;\n\n        if (skip) {\n            path += `&skip=${skip}`;\n        }\n        if (limit) {\n            path += `&limit=${limit}`;\n        }\n        return this.listSomething(path, callback);\n    }\n\n    public joinFriend(userid: string, callback?: Callback<void>): Context {\n        let url = `${super.options().server}/ctx/${this.you}/friends/${userid}`;\n        axios.post(url, null, {headers: super.options().headers})\n            .then(response => {\n                if (callback) {\n                    callback(null, null);\n                }\n            })\n            .catch(e => {\n                if (callback) {\n                    callback(e);\n                }\n            });\n        return this;\n    }\n\n    public joinGroup(groupid: string, callback?: Callback<void>): Context {\n        let url = `${super.options().server}/groups/${groupid}/members/${this.you}`;\n\n\n        axios.post(url, null, {headers: super.options().headers})\n            .then(response => {\n                if (callback) {\n                    callback(null, null);\n                }\n            })\n            .catch(e => {\n                if (callback) {\n                    callback(e);\n                }\n            });\n        return this;\n    }\n\n    public joinRoom(roomid: string, callback?: Callback<void>): Context {\n        let url = `${super.options().server}/rooms/${roomid}/members/${this.you}`;\n\n\n        axios.post(url, null, {headers: super.options().headers})\n            .then(response => {\n                if (callback) {\n                    callback(null, null);\n                }\n            })\n            .catch(e => {\n                if (callback) {\n                    callback(e);\n                }\n            });\n        return this;\n    }\n\n    public listTalkings(endTimestamp?: number, size?: number): TalkingBuilder {\n        return new TalkingBuilderImpl(this, endTimestamp || 0, size || 0, this.you, super.options());\n    }\n\n    private deleteSomething(path: string, callback: Callback<void>): Context {\n        let url = `${super.options().server}${path}`;\n        axios.delete(url, {headers: super.options().headers})\n            .then(response => {\n                if (callback) {\n                    callback(null, null);\n                }\n            })\n            .catch(e => {\n                if (callback) {\n                    callback(e);\n                }\n            });\n\n        return this;\n    }\n\n    public leaveFriend(userid: string, callback?: Callback<void>): Context {\n        let path = `/ctx/${this.you}/friends/${userid}`;\n        return this.deleteSomething(path, callback);\n    }\n\n    public leaveGroup(groupid: string, callback?: Callback<void>): Context {\n        let path = `/groups/${groupid}/members/${this.you}`;\n        return this.deleteSomething(path, callback);\n    }\n\n    public leaveRoom(roomid: string, callback?: Callback<void>): Context {\n        let path = `/rooms/${roomid}/members/${this.you}`;\n        return this.deleteSomething(path, callback);\n    }\n\n    public setMyAttributes(attributes: Attributes, overwrite?: boolean, callback?: Callback<void>): Context {\n        let url = `/ctx/${this.you}/attributes`,\n            postData = JSON.stringify(attributes),\n            cfg = {headers: this.options().headers};\n        (overwrite ? axios.put(url, postData, cfg) : axios.post(url, postData, cfg))\n            .then(response => {\n                if (callback) {\n                    callback(null, null);\n                }\n            })\n            .catch(e => {\n                if (callback) {\n                    callback(e);\n                }\n            });\n\n        return this;\n    }\n\n    public setMyAttribute(name: string, value: any, callback?: Callback<void>): Context {\n        let attributes = {};\n        attributes[name] = value;\n        return this.setMyAttributes(attributes, false, callback);\n    }\n\n    public getMyAttributes(callback?: Callback<Attributes>): Context {\n        if (callback) {\n            super.getAttributes(this.you).forUser(callback);\n        }\n        return this;\n    }\n\n    public getMyAttribute(attributeName: string, callback?: Callback<any>): Context {\n        if (callback) {\n            super.getAttributes(this.you, attributeName).forUser(callback);\n        }\n        return this;\n    }\n}"]}